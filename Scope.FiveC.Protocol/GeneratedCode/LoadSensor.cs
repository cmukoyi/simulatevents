//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: LoadSensorProto.proto
// Note: requires additional types generated from: EventHeaderProto.proto
// Note: requires additional types generated from: Enums/LoadSensorReasonTypeProto.proto
using Scope.FiveC.Protocol.Events.Enums;

namespace Scope.FiveC.Protocol.Events
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"LoadSensor")]
  public partial class LoadSensor : global::ProtoBuf.IExtensible
  {
    public LoadSensor()
	{
		_Header = new EventHeader
		{
			TemplateId = (uint) ProtocolBufferTemplate.LoadSensor,
		};
	}
    
    private EventHeader _Header;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"header", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public override EventHeader Header
    {
      get { return _Header; }
      set { _Header = value; }
    }
    private LoadSensorReasonType? _Reason;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"reason", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public LoadSensorReasonType Reason
    {
      get { return _Reason?? LoadSensorReasonType.LOAD_SENSOR_REASON_UNSPECIFIED; }
      set { _Reason = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ReasonSpecified
    {
      get { return this._Reason != null; }
      set { if (value == (this._Reason== null)) this._Reason = value ? this.Reason : (LoadSensorReasonType?)null; }
    }
    private bool ShouldSerializereason() { return ReasonSpecified; }
    private void Resetreason() { ReasonSpecified = false; }
    
    private uint? _Weight;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"weight", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint Weight
    {
      get { return _Weight?? default(uint); }
      set { _Weight = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool WeightSpecified
    {
      get { return this._Weight != null; }
      set { if (value == (this._Weight== null)) this._Weight = value ? this.Weight : (uint?)null; }
    }
    private bool ShouldSerializeweight() { return WeightSpecified; }
    private void Resetweight() { WeightSpecified = false; }
    
    private bool? _IsOverloaded;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"is_overloaded", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsOverloaded
    {
      get { return _IsOverloaded?? default(bool); }
      set { _IsOverloaded = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsOverloadedSpecified
    {
      get { return this._IsOverloaded != null; }
      set { if (value == (this._IsOverloaded== null)) this._IsOverloaded = value ? this.IsOverloaded : (bool?)null; }
    }
    private bool ShouldSerializeis_overloaded() { return IsOverloadedSpecified; }
    private void Resetis_overloaded() { IsOverloadedSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}