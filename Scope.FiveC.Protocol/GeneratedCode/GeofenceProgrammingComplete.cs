//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: GeofenceProgrammingCompleteProto.proto
// Note: requires additional types generated from: EventHeaderProto.proto
using Scope.FiveC.Protocol.Events.Enums;

namespace Scope.FiveC.Protocol.Events
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"GeofenceProgrammingComplete")]
  public partial class GeofenceProgrammingComplete : global::ProtoBuf.IExtensible
  {
    public GeofenceProgrammingComplete()
	{
		_Header = new EventHeader
		{
			TemplateId = (uint) ProtocolBufferTemplate.GeofenceProgrammingComplete,
		};
	}
    
    private EventHeader _Header;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"header", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public override EventHeader Header
    {
      get { return _Header; }
      set { _Header = value; }
    }
    private uint? _UploadToken;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"upload_token", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint UploadToken
    {
      get { return _UploadToken?? default(uint); }
      set { _UploadToken = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool UploadTokenSpecified
    {
      get { return this._UploadToken != null; }
      set { if (value == (this._UploadToken== null)) this._UploadToken = value ? this.UploadToken : (uint?)null; }
    }
    private bool ShouldSerializeupload_token() { return UploadTokenSpecified; }
    private void Resetupload_token() { UploadTokenSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}