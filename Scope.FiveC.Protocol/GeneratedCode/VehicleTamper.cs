//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: VehicleTamperProto.proto
// Note: requires additional types generated from: EventHeaderProto.proto
using Scope.FiveC.Protocol.Events.Enums;

namespace Scope.FiveC.Protocol.Events
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"VehicleTamper")]
  public partial class VehicleTamper : global::ProtoBuf.IExtensible
  {
    public VehicleTamper()
	{
		_Header = new EventHeader
		{
			TemplateId = (uint) ProtocolBufferTemplate.VehicleTamper,
		};
	}
    
    private EventHeader _Header;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"header", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public override EventHeader Header
    {
      get { return _Header; }
      set { _Header = value; }
    }
    private uint? _TamperReason;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"tamper_reason", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint TamperReason
    {
      get { return _TamperReason?? default(uint); }
      set { _TamperReason = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool TamperReasonSpecified
    {
      get { return this._TamperReason != null; }
      set { if (value == (this._TamperReason== null)) this._TamperReason = value ? this.TamperReason : (uint?)null; }
    }
    private bool ShouldSerializetamper_reason() { return TamperReasonSpecified; }
    private void Resettamper_reason() { TamperReasonSpecified = false; }
    
    private float? _AccelerometerX;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"accelerometer_x", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float AccelerometerX
    {
      get { return _AccelerometerX?? default(float); }
      set { _AccelerometerX = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool AccelerometerXSpecified
    {
      get { return this._AccelerometerX != null; }
      set { if (value == (this._AccelerometerX== null)) this._AccelerometerX = value ? this.AccelerometerX : (float?)null; }
    }
    private bool ShouldSerializeaccelerometer_x() { return AccelerometerXSpecified; }
    private void Resetaccelerometer_x() { AccelerometerXSpecified = false; }
    
    private float? _AccelerometerY;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"accelerometer_y", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float AccelerometerY
    {
      get { return _AccelerometerY?? default(float); }
      set { _AccelerometerY = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool AccelerometerYSpecified
    {
      get { return this._AccelerometerY != null; }
      set { if (value == (this._AccelerometerY== null)) this._AccelerometerY = value ? this.AccelerometerY : (float?)null; }
    }
    private bool ShouldSerializeaccelerometer_y() { return AccelerometerYSpecified; }
    private void Resetaccelerometer_y() { AccelerometerYSpecified = false; }
    
    private float? _AccelerometerZ;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"accelerometer_z", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float AccelerometerZ
    {
      get { return _AccelerometerZ?? default(float); }
      set { _AccelerometerZ = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool AccelerometerZSpecified
    {
      get { return this._AccelerometerZ != null; }
      set { if (value == (this._AccelerometerZ== null)) this._AccelerometerZ = value ? this.AccelerometerZ : (float?)null; }
    }
    private bool ShouldSerializeaccelerometer_z() { return AccelerometerZSpecified; }
    private void Resetaccelerometer_z() { AccelerometerZSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}