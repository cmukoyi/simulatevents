//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: FuelDataProto.proto
// Note: requires additional types generated from: EventHeaderProto.proto
using Scope.FiveC.Protocol.Events.Enums;

namespace Scope.FiveC.Protocol.Events
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"FuelData")]
  public partial class FuelData : global::ProtoBuf.IExtensible
  {
    public FuelData()
	{
		_Header = new EventHeader
		{
			TemplateId = (uint) ProtocolBufferTemplate.FuelData,
		};
	}
    
    private EventHeader _Header;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"header", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public override EventHeader Header
    {
      get { return _Header; }
      set { _Header = value; }
    }
    private uint? _Reason;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"reason", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint Reason
    {
      get { return _Reason?? default(uint); }
      set { _Reason = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ReasonSpecified
    {
      get { return this._Reason != null; }
      set { if (value == (this._Reason== null)) this._Reason = value ? this.Reason : (uint?)null; }
    }
    private bool ShouldSerializereason() { return ReasonSpecified; }
    private void Resetreason() { ReasonSpecified = false; }
    
    private float? _FuelLevelPercents;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"fuel_level_percents", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float FuelLevelPercents
    {
      get { return _FuelLevelPercents?? default(float); }
      set { _FuelLevelPercents = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool FuelLevelPercentsSpecified
    {
      get { return this._FuelLevelPercents != null; }
      set { if (value == (this._FuelLevelPercents== null)) this._FuelLevelPercents = value ? this.FuelLevelPercents : (float?)null; }
    }
    private bool ShouldSerializefuel_level_percents() { return FuelLevelPercentsSpecified; }
    private void Resetfuel_level_percents() { FuelLevelPercentsSpecified = false; }
    
    private int? _TotalFuelLiters;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"total_fuel_liters", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int TotalFuelLiters
    {
      get { return _TotalFuelLiters?? default(int); }
      set { _TotalFuelLiters = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool TotalFuelLitersSpecified
    {
      get { return this._TotalFuelLiters != null; }
      set { if (value == (this._TotalFuelLiters== null)) this._TotalFuelLiters = value ? this.TotalFuelLiters : (int?)null; }
    }
    private bool ShouldSerializetotal_fuel_liters() { return TotalFuelLitersSpecified; }
    private void Resettotal_fuel_liters() { TotalFuelLitersSpecified = false; }
    
    private bool? _FuelCapOpen;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"fuel_cap_open", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool FuelCapOpen
    {
      get { return _FuelCapOpen?? default(bool); }
      set { _FuelCapOpen = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool FuelCapOpenSpecified
    {
      get { return this._FuelCapOpen != null; }
      set { if (value == (this._FuelCapOpen== null)) this._FuelCapOpen = value ? this.FuelCapOpen : (bool?)null; }
    }
    private bool ShouldSerializefuel_cap_open() { return FuelCapOpenSpecified; }
    private void Resetfuel_cap_open() { FuelCapOpenSpecified = false; }
    
    private float? _MinimumFuelLevelPercents;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"minimum_FuelLevelPercents", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float MinimumFuelLevelPercents
    {
      get { return _MinimumFuelLevelPercents?? default(float); }
      set { _MinimumFuelLevelPercents = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool MinimumFuelLevelPercentsSpecified
    {
      get { return this._MinimumFuelLevelPercents != null; }
      set { if (value == (this._MinimumFuelLevelPercents== null)) this._MinimumFuelLevelPercents = value ? this.MinimumFuelLevelPercents : (float?)null; }
    }
    private bool ShouldSerializeminimum_FuelLevelPercents() { return MinimumFuelLevelPercentsSpecified; }
    private void Resetminimum_FuelLevelPercents() { MinimumFuelLevelPercentsSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}